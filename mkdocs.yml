site_name: "PEPkit: the bio data management toolkit"

theme:
  logo: img/pep.png
  favicon: img/pep.png
  name: material
  custom_dir: overrides


  palette:

    # # Palette toggle for dark mode
    # - media: "(prefers-color-scheme: dark)"
    #   scheme: slate
    #   toggle:
    #     icon: material/brightness-4
    #     name: Switch to system preference
    # # Palette toggle for light mode
    # - media: "(prefers-color-scheme: light)"
    #   scheme: material
    #   toggle:
    #     icon: material/brightness-7
    #     name: Switch to dark mode



  features:
    - header.autohide
    - navigation.sections
    # - navigation.expand
    - navigation.footer
    - navigation.indexes 
    - toc.follow
    - content.action.edit
    - content.action.view
    - navigation.tabs
    - navigation.top

markdown_extensions:
  - attr_list
  - md_in_html
  - admonition
  - pymdownx.details
  - pymdownx.superfences
  - pymdownx.highlight:
      use_pygments: true
#  - pymdownx.emoji:
#      emoji_index: !!python/name:material.extensions.emoji.twemoji
#      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: "!!python/name:pymdownx.superfences.fence_code_format"

extra_css:
  - stylesheets/extra.css

extra:
  generator: false  # turn off theme link
  
copyright: >
    <a class="" href="http://databio.org/">
      <img src="https://databio.org/images/logo/logo_databio_long.svg"
        style="height:60px;"
        alt="Databio logo">
    </a>

nav:
  - PEP specification:
    - Getting started: 
      - A simple example: spec/simple-example.md
      - PEP specification: spec/specification.md
      - Rationale: spec/rationale.md
    - Detailed how-to guides:
        - Specify multi-value attributes: spec/howto-multi-value-attributes.md
        - Eliminate paths from table: spec/howto-eliminate-paths.md
        - Remove genome from table: spec/howto-genome-id.md
        - Store many projects in one file: spec/howto-amendments.md
        - Create automatic groups: spec/howto-automatic-groups.md
        - Mix & match amendments: spec/howto-mixmatch.md
        - Import plus amendments: spec/howto-integrate.md
        - Create a PEP from GEO/SRA: spec/howto-geofetch.md
        - Validate a PEP: spec/howto-validate.md
    - Implementations:
      - "Python package: peppy": spec/peppy.md
      - "R package: pepr": spec/pepr.md
    - Reference:
      - How to cite: citations.md
      - Changelog: spec/changelog.md
      - PEPkit usage statistics: statistics.md
      - Support: https://github.com/pepkit/pepkit.github.io/issues
      - Team and Contributing: spec/team.md
  - Eido:
    - Eido: eido/README.md
    - Getting started:
      - Install and configure: eido/install.md
    - How-to guides:
      - "Tutorial: eido in Python": eido/code/demo.md
      - "Tutorial: eido in a shell": eido/code/cli.md
      - Using eido filters: eido/filters.md
      - Writing a custom filter: eido/writing-a-filter.md
      - Writing a schema: eido/writing-a-schema.md
    - Reference:
      - How to cite: citations.md
      - Example schemas: eido/example-schemas.md
      - Eido Python API: eido/code/python-api.md
      - Built-in filters API: eido/code/plugin-api-docs.md
      - Support: https://github.com/pepkit/eido/issues
      - Contributing: eido/contributing.md
      - Changelog: eido/changelog.md
  - GEOfetch:
    - GEOfetch: geofetch/README.md
    - Getting started:
      - Install and configure: geofetch/install.md
      - SRA convert: geofetch/sra-convert.md
    - Tutorials:
      - Tutorial for processed data: geofetch/code/processed-data-downloading.md
      - Tutorial for raw data: geofetch/code/raw-data-downloading.md
      - geofetch from within Python: geofetch/code/python-usage.md
      - GSE Finder: geofetch/gse-finder.md
    - How-to guides:
      - Specifying samples to download: geofetch/file-specification.md
      - Set SRA data download location: geofetch/howto-location.md
      - Run SRA convert: geofetch/code/howto-sra-to-fastq.md
    - Reference:
      - How to cite: citations.md
      - API: geofetch/code/python-api.md
      - Metadata output: geofetch/metadata-output.md
      - CLI usage: geofetch/code/usage.md
      - FAQ: geofetch/faq.md
      - Support: http://github.com/pepkit/geofetch/issues
      - Contributing: geofetch/contributing.md
      - Changelog: geofetch/changelog.md
  - Looper:
    - Looper: looper/README.md
    - Installation: looper/install.md
    - Pipeline User Guide:
      - User tutorial:
        - Initiating a new looper project: looper/user-tutorial/initialize.md
        - Using PEP to simplify metadata: looper/user-tutorial/metadata.md
        - Configuring pipestat results: looper/user-tutorial/user-pipestat.md
        - Configuring cluster computing: looper/user-tutorial/compute-settings.md
        - Conclusion: looper/user-tutorial/conclusion.md
      - Advanced user guide:
        - Advanced run options: looper/advanced-guide/advanced-run-options.md
        - Customizing compute settings: looper/advanced-guide/advanced-computing.md
        - Advanced metadata features: looper/advanced-guide/advanced-metadata.md
      - How-to recipes:
        - Running jobs in containers: looper/how-to/containers.md
        - Configure pipestat back-ends: looper/how-to/configure-pipestat-backends.md
        - Using divvy: looper/using-divvy.md
        - Running project-level pipelines: looper/how-to/project-level-pipelines.md
        - Link similar results: looper/how-to/link-objects.md
        - Report objects:  looper/how-to/report-objects.md
    - Pipeline Developer Docs:
      - Developer tutorial:
        - Writing a pipeline interface: looper/developer-tutorial/writing-a-pipeline-interface.md
        - Configuring a pipeline to use pipestat: looper/developer-tutorial/developer-pipestat.md
        - Using pre-submission hooks: looper/developer-tutorial/pre-submission-hooks.md
        - Pipeline interface specification: looper/developer-tutorial/pipeline-interface-specification.md
    - Reference:
      - Reference:
        - CLI Usage: looper/usage.md
        - API: looper/code/python-api.md
        - How to cite: citations.md
        - FAQ: looper/faq.md
        - Support: looper/support.md
        - Contributing: looper/contributing.md
        - Changelog: looper/changelog.md
  - PEPhub:
    - PEPhub: pephub/README.md
    - User guide:
      - Getting started: pephub/user/getting-started.md
      - Use a PEP in an existing pipeline: pephub/user/pipelines.md
      - Validating PEPs: pephub/user/validation.md
      - Version control: pephub/user/version-control.md
      - Semantic search: pephub/user/semantic-search.md
      - How to use views: pephub/user/views.md
      - PEP of PEPs (POP): pephub/user/pops.md
      - Accessing GEO metadata: pephub/user/geo.md
      - PEPHubClient:
        - PEPhubClient: pephub/user/pephubclient/README.md
        - Quickstart: pephub/user/pephubclient/tutorial.md
        - Python API: pephub/user/pephubclient/phc_usage.md
        - Python API samples: pephub/user/pephubclient/phc_samples_usage.md
        - Python API views: pephub/user/pephubclient/phc_views_usage.md
        - CLI usage: pephub/user/pephubclient/cli.md
        - Changelog: pephub/user/pephubclient/changelog.md
    - Developer guide:
      - Setup: pephub/developer/setup.md
      - Deployment: pephub/developer/deployment.md
      - Development: pephub/developer/development.md
      - Authentication: pephub/developer/authentication.md
      - Authentication Device: pephub/developer/authentication-device.md
      - Semantic search: pephub/developer/semantic-search.md
      - Server settings: pephub/developer/server-settings.md
      - Archiving namespaces: pephub/developer/tar_namespace.md
      - PEPembed:
        - PEPembed: pephub/developer/pepembed/README.md
      - pepdbagent:
        - pepdbagent: pephub/developer/pepdbagent/README.md
        - Database tutorial: pephub/developer/pepdbagent/db_tutorial.md
        - Changelog: pephub/developer/pepdbagent/changelog.md
      - geopephub: pephub/developer/geopephub.md
    - Reference:
      - Schema registry: https://schema.databio.org
      - How to cite: citations.md
      - Changelog: pephub/changelog.md
  - Peppy:
    - Peppy: peppy/README.md
    - Getting started:
      - Installing and Hello World: peppy/hello-world.md
    - How-to guides:
      - How to initialize a Project: peppy/initialize.md
      - How to use peppy: peppy/code/tutorial.md
      - How to use subsample table: peppy/code/feature4_subsample_table.md
      - How to use amendments: peppy/code/feature5_amend.md
      - How to use append sample modifier: peppy/code/feature1_append.md
      - How to use imply sample modifier: peppy/code/feature2_imply.md
      - How to validate a PEP: peppy/validating.md
    - Reference:
      - Project models: peppy/models.md
      - How to cite: citations.md
      - API: peppy/code/python-api.md
      - Support: peppy/support.md
      - Contributing: peppy/contributing.md
      - Changelog: peppy/changelog.md
  - Pipestat:
    - Pipestat: pipestat/README.md
    - How-to guides:
      - Quickstart: pipestat/code/api-quickstart.md
      - Write a pipestat schema: pipestat/pipestat-schema.md
      - Use Python API: pipestat/code/python-tutorial.md
      - Use command line interface: pipestat/code/cli.md
      - Report objects as results: pipestat/code/reporting-objects.md
      - Configure pipestat: pipestat/configuration.md
      - Multi pipelines and result files: pipestat/multi.md
    - Reference:
      - How to cite: citations.md
      - CLI usage: pipestat/usage.md
      - Configuration format: pipestat/config.md
      - Testing configuration: pipestat/testing.md
      - Environment variables: pipestat/env-vars.md
      - Pipestat specification: pipestat/pipestat-specification.md
      - Python API: pipestat/code/python-api.md
      - Support: https://github.com/pepkit/pipestat/issues
      - Contributing: pipestat/contributing.md
      - Changelog: pipestat/changelog.md
  - Pypiper:
    - Pypiper: pypiper/README.md
    - Getting started: 
      - Philosophy: pypiper/philosophy.md
      - Features at-a-glance: pypiper/features.md
      - Hello world: pypiper/code/hello-world.md
    - Developer guides:    
      - Building a basic pipeline: pypiper/code/basic-pipeline.md
      - Using the run method: pypiper/advanced-run-method.md
      - Automatic command-line arguments: pypiper/cli.md
      - Configuring pipelines: pypiper/configuration.md
      - Reporting statistics: pypiper/report.md
      - Reporting statistics with pipestat: pypiper/pipestat.md
      - Cleaning up intermediate files: pypiper/clean.md
      - Best practices: pypiper/best-practices.md
    - Toolkits:
      - "NGSTk: the NGS toolkit": pypiper/ngstk_intro.md    
    - Reference:
      - How to cite: citations.md
      - Catalog of pipeline outputs: pypiper/outputs.md
      - Pypiper API: pypiper/code/python-api.md
      - NGSTk API: pypiper/code/ngstk-api.md
      - FAQ: pypiper/faq.md
      - Support: pypiper/support.md
      - Contributing: pypiper/contributing.md
      - Changelog: pypiper/changelog.md
  - How to cite: citations.md
  - Stats: statistics.md

autodoc:
  lucidoc:
    - pkg: peppy
      outfile: docs/peppy/code/python-api.md
    - pkg: looper
      outfile: docs/looper/code/python-api.md
    - pkg: pipestat
      outfile: docs/pipestat/code/python-api.md
    - pkg: pypiper
      outfile: docs/pypiper/code/python-api.md
      whitelist:
        - PipelineManager
    - pkg: pypiper
      outfile: docs/pypiper/code/ngstk-api.md
      whitelist:
        - NGSTk
    - pkg: geofetch
      outfile: docs/geofetch/code/python-api.md
    - pkg: eido
      outfile: docs/eido/code/python-api.md
      blacklist: 
        - basic_pep_filter
        - yaml_pep_filter
        - csv_pep_filter
        - yaml_samples_pep_filter
    - outfile: docs/eido/code/plugin-api-docs.md
      pkg: eido
      whitelist: 
        - basic_pep_filter
        - yaml_pep_filter
        - csv_pep_filter
        - yaml_samples_pep_filter
  jupyter:
    - in: eido/notebooks
      out: eido/code
    - in: geofetch/notebooks
      out: geofetch/code
    - in: looper/notebooks
      out: looper/code
    - in: peppy/notebooks
      out: peppy/code
    - in: pipestat/notebooks
      out: pipestat/code
    - in: pypiper/notebooks
      out: pypiper/code
  cli_usage:
    - template: docs/geofetch/usage-template.md.tpl
      outfile: docs/geofetch/code/usage.md
      commands:
        - geofetch --help
